# Use the official Node.js image as a base
FROM node:18

# Install jq
RUN apt-get update && apt-get install -y jq

# Set the working directory
WORKDIR /app

# Copy the package.json file and install dependencies
COPY ./src/package*.json ./
RUN npm install

# Copy the rest of the source code
COPY ./src ./

# Build Performa
RUN node bin/build.js dist

# Expose the port 5511 for the application
EXPOSE 5511

# Start script
COPY <<-"EOT" /usr/local/bin/start
#!/bin/bash

# Run the setup command
bin/control.sh setup

echo "Display conf before"
jq . conf/config.json

# Change config: add debug and echo keys to see logs in Docker
# See performa/src/bin/control.sh:L103 for values
jq '. += {"debug": true, "echo": "Performa WebServer API Transaction Error"}' conf/config.json > /tmp/config.json && mv /tmp/config.json conf/config.json

# Test if the PERFORMA_SECRET_KEY environment variable exists
if [ -n "$PERFORMA_SECRET_KEY" ]; then
    # Change the value of secret_key in the config.json file
    jq '.secret_key = "'"$PERFORMA_SECRET_KEY"'"' conf/config.json > /tmp/config.json && mv /tmp/config.json conf/config.json
else
    # Print a warning message and display the current value of secret_key
    echo "WARNING: The PERFORMA_SECRET_KEY environment variable is not set. Value has been autogenerated:"
    jq '.secret_key' conf/config.json
fi

# Test if the PERFORMA_EXTERNAL_USER_API environment variable exists
if [ -n "$PERFORMA_EXTERNAL_USER_API" ]; then
    # Change the value of external_user_api in the config.json file
    jq '.User.external_user_api = "'"$PERFORMA_EXTERNAL_USER_API"'"' conf/config.json > /tmp/config.json && mv /tmp/config.json conf/config.json
fi

# Test if the PERFORMA_BASE_APP_URL environment variable exists
if [ -n "$PERFORMA_BASE_APP_URL" ]; then
    # Change the value of base_app_url in the config.json file
    jq '.base_app_url = "'"$PERFORMA_BASE_APP_URL"'"' conf/config.json > /tmp/config.json && mv /tmp/config.json conf/config.json
fi

echo "Display conf after"
jq . conf/config.json

# Run the startup command
bin/control.sh start

# Enter an infinite loop
while true; do
 # Wait a few seconds
 sleep 5
done

EOT
RUN chmod u+x /usr/local/bin/start

# Launch our start script
CMD ["/usr/local/bin/start"]
