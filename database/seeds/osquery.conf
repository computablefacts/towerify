{
    "options": {
        "config_plugin": "filesystem",
        "logger_plugin": "filesystem",
        "logger_path": "/var/log/osquery",
        "disable_logging": "false",
        "schedule_splay_percent": "10",
        "pidfile": "/var/osquery/osquery.pidfile",
        "events_expiry": "3600",
        "database_path": "/var/osquery/osquery.db",
        "verbose": "false",
        "worker_threads": "2",
        "disable_events": "false",
		"enable_file_events": "true",
		"enable_ntfs_publisher": "true",
        "disable_audit": "false",
        "audit_allow_config": "true",
        "enable_syslog": "true",
        "force": "true",
        "audit_allow_sockets": "true",
        "schedule_default_interval": "3600"
    },
    "schedule": {
        "crontab": {
          "query": "SELECT * FROM crontab;",
          "interval": 30,
          "description": "Retrieves all jobs scheduled in crontab on the target system."
        },
        "socket_events":{
          "query": "SELECT action, auid, family, local_address, local_port, path, pid, remote_address, remote_port, success, time FROM socket_events WHERE success=1 AND path NOT IN ('/usr/bin/hostname') AND remote_address NOT IN ('127.0.0.1','127.0.0.53','', '0000:0000:0000:0000:0000:0000:0000:0001', '::1', '0000:0000:0000:0000:0000:ffff:7f00:0001', 'unknown', '0.0.0.0', '0000:0000:0000:0000:0000:0000:0000:0000', '0') AND remote_address NOT LIKE '%192.168%' AND remote_address NOT LIKE '%127.0.0%' AND remote_address NOT LIKE '%172.19.0.%' AND remote_address NOT LIKE '%10.16%' and remote_port != '0' and remote_port != '5432' and remote_port != '50051' and path NOT LIKE '%/bin/docker-proxy%' and path NOT LIKE '%/bin/postgres%' and path NOT LIKE '%/bin/redis-server%' and path NOT LIKE '%/usr/lib/firefox-esr/firefox-esr%' and path NOT LIKE '%/usr/libexec/sendmail/sendmail%' and path NOT LIKE '%/usr/local/bin/python3.9%';",
          "interval": 30,
          "description": "Socket events collected from the audit framework"
        },	
        "apt_sources": {
          "query": "SELECT * FROM apt_sources;",
          "interval": 30,
          "description": "Display apt package manager sources."
        },
        "behavioral_reverse_shell": {
          "query": "SELECT DISTINCT(processes.pid), processes.parent, processes.name, processes.path, processes.cmdline, processes.cwd, processes.root, processes.uid, processes.gid, processes.start_time, process_open_sockets.remote_address, process_open_sockets.remote_port, (SELECT cmdline FROM processes AS parent_cmdline WHERE pid=processes.parent) AS parent_cmdline FROM processes JOIN process_open_sockets USING (pid) LEFT OUTER JOIN process_open_files ON processes.pid = process_open_files.pid WHERE (name='sh' OR name='bash') AND remote_address NOT IN ('0.0.0.0', '::', '') AND remote_address NOT LIKE '10.%' AND remote_address NOT LIKE '192.168.%';",
          "interval": 30,
          "description": "Find shell processes that have open sockets"
        },
        "deb_packages": {
          "query": "SELECT * FROM deb_packages;",
          "interval": 30,
          "description": "Display all installed DEB packages"
        },
        "nmap_installed": {
          "query": "SELECT * FROM deb_packages where name = 'nmap';",
          "interval": 30,
          "description": "Nmap was installed"
        },
        "wireshark_installed": {
          "query": "SELECT * FROM deb_packages where name = 'wireshark';",
          "interval": 30,
          "description": "Wireshark was installed"
        },
        "tcpdump_installed": {
          "query": "SELECT * FROM deb_packages where name = 'tcpdump';",
          "interval": 30,
          "description": "Tcpdump was installed"
        },
        "openssh_server_installed": {
          "query": "SELECT * FROM deb_packages where name = 'openssh-server';",
          "interval": 30,
          "description": "Tcpdump was installed"
        },
        "netcat_installed": {
          "query": "SELECT * FROM deb_packages where name = 'netcat';",
          "interval": 30,
          "description": "Netcat was installed"
        },
        "hping3_installed": {
          "query": "SELECT * FROM deb_packages where name = 'hping3';",
          "interval": 30,
          "description": "hping3 was installed"
        },
        "dsniff_installed": {
          "query": "SELECT * FROM deb_packages where name = 'dsniff';",
          "interval": 30,
          "description": "dsniff was installed"
        },
        "nbtscan_installed": {
          "query": "SELECT * FROM deb_packages where name = 'nbtscan';",
          "interval": 30,
          "description": "nbtscan was installed"
        },
        "scapy_installed": {
          "query": "SELECT * FROM deb_packages where name = 'scapy';",
          "interval": 30,
          "description": "Scapy was installed"
        },
        "dns_resolvers": {
          "query": "SELECT * FROM dns_resolvers;",
          "interval": 30,
          "description": "DNS resolvers used by the host"
        },
        "etc_hosts": {
          "query": "SELECT * FROM etc_hosts;",
          "interval": 30,
          "description": "Retrieves all entries in the target system /etc/hosts file."
        },
        "kernel_modules": {
          "query": "SELECT * FROM kernel_modules;",
          "interval": 30,
          "description": "Linux kernel modules both loaded and within the load search path."
        },
        "last": {
          "query": "SELECT datetime(time,'unixepoch','UTC') as time_utc,host,username,tty,pid,type FROM last WHERE type='7';",
          "interval": 30,
          "description": "Retrieves the list of the latest logins with PID, username and timestamp."
        },
        "ld_preload": {
          "query": "SELECT process_envs.pid, process_envs.key, process_envs.value, processes.name, processes.path, processes.cmdline, processes.cwd FROM process_envs join processes USING (pid) WHERE key = 'LD_PRELOAD' and processes.path NOT LIKE '%/usr/lib/firefox-esr/firefox-esr%';",
          "interval": 30,
          "description": "Any processes that run with an LD_PRELOAD environment variable"
        },
        "listening_ports": {
          "query": "SELECT pid, port, address, processes.path, cmdline, cwd FROM listening_ports JOIN processes USING (pid) WHERE port not in ('0','22', '255', '5020', '7543', '7001', '7514', '7637', '6379', '5432', '1323', '5021') AND processes.path NOT LIKE '%/usr/bin/dockerd%' AND processes.path NOT LIKE '%go-cve-dictionary%' AND processes.path NOT LIKE '%/sshd%' AND processes.path NOT LIKE '%/usr/lib/firefox-esr/firefox-esr%' AND processes.path NOT LIKE '%/usr/lib/virtualbox/VBoxHeadless%';",
		  "state_query": "SELECT * FROM listening_ports WHERE address ='0.0.0.0';",
		  "interval": 30,
          "description": "Gather information about processes that are listening on a socket."
        },
        "interface_addresses": {
          "query": "SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details d USING (interface);",
          "interval": 30,
          "description": "Record the network interfaces and their associated IP and MAC addresses"
        },
        "processes": {
          "query": "SELECT pid, name, path, cmdline FROM processes WHERE name NOT IN ('systemd', 'systemd-network', 'dbus-daemon', 'cron', 'networkd-dispat', 'VBoxService', 'kstrp', 'systemd-resolve', 'pickup', 'osqueryd', 'rsyslogd', 'nginx', 'mysqld', 'sshd', 'sudo', 'su', 'systemd-journal', 'vuls', 'accounts-daemon', 'acpi_thermal_pm', 'snapd', 'osqueryi','bash', 'polkitd', 'Suricata-Main', 'systemctl', 'systemd-tty-ask', 'sendmail', 'procmail', 'sendmail-msp', 'postgres', 'systemd-udevd', 'containerd-shim', 'Isolated Web Co', 'celery', 'docker') AND name NOT LIKE '%loop%' AND name NOT LIKE '%kworker%' AND name NOT LIKE '%scsi%' AND name NOT LIKE '%postgres:%' AND cmdline NOT LIKE '%:6379%' AND name NOT LIKE '%migration%' AND name NOT LIKE '%postgres: postgres%' AND name NOT LIKE '%watchdog%' AND name NOT LIKE '%cpuhp%' AND name NOT LIKE '%cpuhp%' AND name NOT LIKE '%ksoftirqd%' AND name NOT LIKE '%mysql%' AND name NOT LIKE '%kswapd%' AND name NOT LIKE '%postgres%' AND name NOT LIKE '%systemd-udevd%' AND name NOT LIKE '%sendmail%' AND cmdline NOT LIKE '%localhost:5020 --reload wsgi:app%' AND cmdline NOT LIKE '%127.0.0.1:5020%' AND cmdline NOT LIKE '%analytics_run.sh%' AND cmdline NOT LIKE '%PingStatusUpdate.py%' AND cmdline NOT LIKE '%ping_status_update.sh%' AND cmdline NOT LIKE '%full_status_update.sh%' AND cmdline NOT LIKE '%go-cve-dictionary%' AND cmdline NOT LIKE '%impulse/tasks_manager%' AND cmdline NOT LIKE '%FullStatusUpdate.py%' AND cmdline NOT LIKE '%build_status_report.sh%' AND cmdline NOT LIKE '%sendmail%' AND cmdline NOT LIKE '%main.bgtasks.general_tasks worker%' AND cmdline NOT LIKE '%impulse.conf%' AND cmdline NOT LIKE '%host-port 7543%' AND cmdline NOT LIKE '%/etc/init.d/sendmail%' AND cmdline NOT LIKE '%auxiliary_server/venv/bin/gunicorn%' AND cmdline NOT LIKE '%gunicorn_starter.sh%' AND cmdline NOT LIKE '%tasks_manager/cron_tasks/detections.sh%' AND cmdline NOT LIKE '%nids_flow_analysis.sh%' AND cmdline NOT LIKE '%/usr/lib/firefox-esr/firefox-esr%' AND cmdline NOT LIKE '%impulse-bgtasks%' AND cmdline NOT LIKE '%main.celery_app worker%' AND cmdline NOT LIKE '%/impulse/aux_server/aux-venv%' AND cmdline NOT LIKE '%sleep%' AND cmdline NOT LIKE '%0.0.0.0:5020%' AND cmdline NOT LIKE '%usr/bin/suricata-update%';",
          "state_query": "SELECT * FROM processes;",
		  "interval": 30,
          "description": "Processes running on the host."
        },			
        "nmap_process":{
          	"query": "SELECT * FROM processes WHERE name = 'nmap'",
        	"interval": 30,
          	"description": "Nmap process"
        },
        "ftp_process":{
          	"query": "SELECT * FROM processes WHERE name = 'ftp'",
        	"interval": 30,
          	"description": "FTP process"
        },
        "scp_secure_copy": {
          "query": "SELECT * FROM processes WHERE name = 'scp'",
		  "interval": 30,
          "description": "SCP Secure Copy."
        },
        "netcat_listener":{
          	"query": "SELECT * FROM processes WHERE name = 'nc' AND cmdline LIKE '%-l%' ",
        	"interval": 30,
          	"description": "Netcat listener"
        },
        "busybox_server":{
          	"query": "SELECT * FROM processes WHERE cmdline LIKE '%busybox httpd%' ",
        	"interval": 30,
          	"description": "Busybox process"
        },
        "ruby_server":{
          	"query": "SELECT * FROM processes WHERE name = 'ruby' AND cmdline LIKE '%httpd%' ",
        	"interval": 30,
          	"description": "Ruby server"
        },
        "php_server":{
          	"query": "SELECT * FROM processes WHERE name = 'php' AND cmdline LIKE '%-S 0.0.0.0%' ",
        	"interval": 30,
          	"description": "PHP server"
        },

        "python_server":{
          	"query": "SELECT * FROM processes WHERE name = 'python' OR name = 'python3' AND cmdline LIKE '%http.server%' OR cmdline LIKE '%SimpleHTTPServer%' ",
        	"interval": 30,
          	"description": "Python server"
        },

        "openssl_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'openssl' AND cmdline LIKE '%connect%' ",
        	"interval": 30,
          	"description": "OpenSSL Exfiltration"
        },
		
        "cancel_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'cancel' AND cmdline LIKE '%-h %' ",
        	"interval": 30,
          	"description": "Cancel Exfiltration"
        },	

        "wget_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'wget' AND cmdline NOT LIKE '%--post-file=%' AND cmdline LIKE '%nids-profile-analysis/analyse-flows%' AND cmdline LIKE '%scan-installed-pkgs%' AND cmdline NOT LIKE '%agent-gateway/send/full-status-update%'; ",
        	"interval": 30,
          	"description": "Wget Exfiltration"
        },
			
        "whois_exfiltration":{
          	"query": "SELECT * FROM processes WHERE cmdline LIKE '%whois -h%' ",
        	"interval": 30,
          	"description": "Whois Exfiltration"
        },

        "bash_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'bash' AND cmdline LIKE '%POST%' ",
        	"interval": 30,
          	"description": "Bash Exfiltration"
        },

        "curl_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'curl' AND cmdline LIKE '%POST%' ",
        	"interval": 30,
          	"description": "Curl Exfiltration"
        },
        "dns_exfiltration":{
          	"query": "SELECT * FROM processes WHERE name = 'dig' AND cmdline LIKE '%@%' ",
        	"interval": 30,
          	"description": "Possible DNS exfiltration"
        },

        "tar_archive_created":{
          	"query": "SELECT * FROM processes WHERE name = 'tar' AND cmdline LIKE '%-c%' ",
        	"interval": 30,
          	"description": "Tar Archive Created"
        },

        "wget_file_download":{
          	"query": "SELECT * FROM processes WHERE name = 'wget' AND cmdline NOT LIKE '%agent-gateway/send/full-status-update%' AND cmdline NOT LIKE '%local-endpoint/%'",
        	"interval": 30,
          	"description": "Wget file download"
        },

        "curl_file_download":{
          	"query": "SELECT * FROM processes WHERE name = 'curl' AND cmdline LIKE '%--output%' ",
        	"interval": 30,
          	"description": "Curl file download"
        },

        "shell_history": {
          "query": "select usr.username, sht.command, sht.history_file from shell_history sht JOIN users usr ON sht.uid = usr.uid WHERE sht.uid IN (SELECT uid from users);",
          "interval": 30,
          "description": "Record shell history for all users on system (instead of just root)"
        },

        "shell_history_root": {
          "query": "select * from shell_history;",
          "interval": 30,
          "description": "Record shell history for root user"
        },
        "suid_bin": {
          "query": "SELECT * FROM suid_bin;",
          "interval": 30,
          "description": "Display any SUID binaries that are owned by root"
        },
        "user_ssh_keys": {
          "query": "SELECT * FROM users CROSS JOIN user_ssh_keys USING (uid);",
          "interval": 30,
          "description": "Returns the private keys in the users ~/.ssh directory and whether or not they are encrypted"
        },
        "users": {
          "query": "SELECT * FROM users;",
          "interval": 30,
          "description": "Local system users."
        },
        "groups": {
          "query": "SELECT * FROM groups;",
          "interval": 30,
          "description": "Local system users."
        },
        "python_packages": {
          "query": "SELECT * FROM python_packages;",
          "interval": 30,
          "description": "Python packages."
        },
        "active_connections": {
          "query": "select * from process_open_sockets LEFT JOIN processes ON process_open_sockets.pid = processes.pid WHERE process_open_sockets.remote_port != 0 AND processes.name != '' AND processes.name != 'nginx' AND processes.name != 'chronyd' AND processes.name != 'sendmail' AND processes.name != 'go-cve-dictiona' AND process_open_sockets.remote_address NOT LIKE '%172.%' AND process_open_sockets.remote_address NOT LIKE '%192.168.%' AND process_open_sockets.remote_address NOT IN('127.0.0.1', '10.0.2.2', '172.24.0.1', '172.23.0.1', '172.22.0.1', '172.21.0.1', '172.21.0.2', '172.21.0.3', '10.0.2.3', '127.0.0.53') AND process_open_sockets.path NOT LIKE '%usr/lib/firefox-esr/firefox-esr%' AND process_open_sockets.path NOT LIKE '%/usr/local/bin/node%' AND process_open_sockets.cwd NOT LIKE '%/opt/impulse/managerd%' AND process_open_sockets.cwd NOT LIKE '%usr/local/bin/celery%';",
		      "interval": 30,
          "description": "Network connections from system processes"
        },
        "file_events": {
          "query": "SELECT * FROM file_events where target_path NOT LIKE '%.swp%' and target_path NOT LIKE '%.swx%' and target_path NOT LIKE '%~%' and target_path NOT LIKE '%nshadow%' and target_path NOT LIKE '%shadow%' and target_path NOT LIKE '%subgid%' and target_path NOT LIKE '%subuid%' and target_path NOT LIKE '%gshadow%' and target_path NOT LIKE '%.lock%' and target_path NOT LIKE '%+%' and target_path NOT LIKE '%-%' and target_path NOT LIKE '%group%' and target_path NOT LIKE '%passwd%' and target_path NOT LIKE '%/opt/impulse%' and target_path NOT LIKE '%/etc/ufw%' and target_path NOT LIKE '%/etc/osquery/osquery.conf%';",
          "removed": false,
          "interval": 30
        },		
        "startup_items": {
          "query": "select * from startup_items where name NOT LIKE '%docker-%' AND name NOT LIKE '%impulse-agent-grpc-client.service';",
          "interval": 10,
		      "description": "New systemd service"
        }
    },

    "file_paths": {
      "critical_binary": [
        "/bin/%%"
      ],
      "config_files": [
        "/etc/%%"
      ],	  
      "systemd_service": [
        "/etc/systemd/%%"
      ],
      "ssl_certificates": [
        "/etc/ssl/%%"
      ],	  
      "user_files": [
        "/home/%%"
      ],  	  	  		  
      "linux_modules": [
        "/sys/%%"
      ],
      "lib": [
        "/lib/%%"
      ],	
      "lib64": [
        "/lib64/%%"
      ],	    
      "vendor_software": [
        "/opt/%%"
      ],
      "boot": [
        "/boot/%%"
      ],
      "dev": [
        "/dev/%%"
      ],
      "media": [
        "/media/%%"
      ],
      "sbin": [
        "/sbin/%%"
      ],
      "sbin": [
        "/sbin/%%"
      ]	 	  	  		  		  	  	 	  	 
    },
    
   "exclude_paths": {
       "tmp": [
          "/tmp/%%"
       ],
       "var_logs": [
          "/var/log/%%"
       ],
       "dev": [
          "/dev/%%"
       ],
       "root": [
          "/root/%%"
       ],
       "impulse_logs": [
          "/var/impulse/%%"
       ],
       "var_osquery": [
          "/var/osquery/%%"
       ],
       "opt": [
          "/opt/%%"
       ]       
    },

   "packs": {
      "*": "/etc/osquery/packs/custom/*"
    }

}