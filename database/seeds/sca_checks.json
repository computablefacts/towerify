[
    {
        "id": 1000,
        "name": "Ensure mounting of squashfs filesystems is disabled.",
        "description": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs ). A squashfs image can be used without having to first decompress the image.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/squashfs.conf and add the following line: install squashfs /bin/true. Run the following command to unload the squashfs module: # rmmod squashfs",
        "test_query": "from kernel_modules where name = 'squashfs';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.7"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1001,
        "name": "Ensure mounting of cramfs filesystems is disabled.",
        "description": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "remediation": "1) Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following line: install cramfs /bin/true. 2) Run the following command to unload the cramfs module: # rmmod cramfs",
        "test_query": "from kernel_modules where name = 'cramfs';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.1"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1002,
        "name": "Ensure mounting of freevxfs filesystems is disabled.",
        "description": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/freevxfs.conf and add the following line: install freevxfs /bin/true Run the following command to unload the freevxfs module: # rmmod freevxfs",
        "test_query": "from kernel_modules where name = 'freevxfs';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.2"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1003,
        "name": "Ensure mounting of jffs2 filesystems is disabled.",
        "description": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/jffs2.conf and add the following line: install jffs2 /bin/true Run the following command to unload the jffs2 module: # rmmod jffs2",
        "test_query": "from kernel_modules where name = 'jffs2';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.3"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1004,
        "name": "Ensure mounting of hfs filesystems is disabled.",
        "description": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/hfs.conf and add the following line: install hfs /bin/true Run the following command to unload the hfs module: # rmmod hfs",
        "test_query": "from kernel_modules where name = 'hfs';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.4"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1005,
        "name": "Ensure mounting of hfsplus filesystems is disabled.",
        "description": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .confExample: vi /etc/modprobe.d/hfsplus.conf and add the following line: install hfsplus /bin/true Run the following command to unload the hfsplus module: # rmmod hfsplus",
        "test_query": "from kernel_modules where name = 'hfsplus';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.5"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1006,
        "name": "Ensure mounting of udf filesystems is disabled.",
        "description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.",
        "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/udf.conf and add the following line: install udf /bin/true Run the following command to unload the udf module: # rmmod udf",
        "test_query": "from kernel_modules where name = 'udf';",
        "query_type": "negative_success",
        "category": "Disable unused filesystems",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.1.7"
            },
            {
                "name": "cis_csc",
                "version": "5.1"
            },
            {
                "name": "pci_dss",
                "version": "2.2.5"
            },
            {
                "name": "tsc",
                "version": "CC6.3"
            }
        ],
        "enabled": true
    },
    {
        "id": 1007,
        "name": "Ensure /tmp is on a separate partition",
        "description": "Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.",
        "rationale": "Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.",
        "remediation": "Configure /etc/fstab as appropriate. Example: tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0 or Run the following commands to enable systemd /tmp mounting: systemctl unmask tmp.mount systemctl enable tmp.mount Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to configure the /tmp mount: [Mount] What=tmpfs Where=/tmp Type=tmpfs Options=mode=1777,strictatime,noexec,nodev,nosuid",
        "test_query": "from mounts where path = '/tmp';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "enabled": false
    },
    {
        "id": 1008,
        "name": "nodev option should be set on /tmp partition.",
        "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "rationale": "Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp.",
        "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp: # mount -o remount,nodev /tmp     OR      Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nodevto the /tmp mount options:  [Mount]   Options=mode=1777,strictatime,noexec,nodev,nosuid Run the following command to remount /tmp:  # mount -o remount,nodev /tmp",
        "test_query": "from mounts where path = '/tmp' and flags LIKE '%nodev%';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "enabled": false
    },
    {
        "id": 1009,
        "name": "nosuid option should be set on /tmp partition.",
        "description": "Ensure nosuid option set on /tmp partition.",
        "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create set userid files in /tmp.",
        "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp: # mount -o remount,nosuid /tmp       OR          Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nosuidto the /tmp mount options:[Mount]  Options=mode=1777,strictatime,noexec,nodev,nosuid  Run the following command to remount /tmp:# mount -o remount,nosuid /tmp",
        "test_query": "from mounts where path = '/tmp' and flags LIKE '%nosuid%';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "enabled": false
    },
    {
        "id": 1010,
        "name": "noexec option should be set on /tmp partition.",
        "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
        "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create set userid files in /tmp.",
        "remediation": "Edit the /etc/fstab file and add noexecto the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp: # mount -o remount,noexec /tmp       OR      Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add noexecto the /tmp mount options:  [Mount]  Options=mode=1777,strictatime,noexec,nodev,nosuid Run the following command to remount /tmp: # mount -o remount,noexec /tmp",
        "test_query": "from mounts where path = '/tmp' and flags LIKE '%noexec%';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "enabled": false
    },
    {
        "id": 1011,
        "name": "/dev/shm should have its own filesystem mount.",
        "description": "/dev/shm is a traditional shared memory concept. One program will create a memory portion, which other processes (if permitted) can access. Mounting tmpfsat /dev/shmis handled automatically by systemd.",
        "rationale": "Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. Configuring /dev/shm allows an administrator to set the noexecoption on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "remediation": "Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. Configuring /dev/shm allows an administrator to set the noexecoption on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "test_query": "from mounts where path = '/dev/shm';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "enabled": false
    },
    {
        "id": 1012,
        "name": "nodev option should be set on /dev/shm partition.",
        "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "rationale": "Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
        "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,nodev /dev/shm",
        "test_query": "from mounts where path = '/dev/shm' and flags LIKE '%nodev%';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "enabled": false
    },
    {
        "id": 1013,
        "name": "nosuid option set on /dev/shm partition.",
        "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "rationale": "Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
        "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,nosuid /dev/shm",
        "test_query": "from mounts where path = '/dev/shm' and flags LIKE '%nosuid%';",
        "query_type": "positive_success",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "enabled": false
    },
    {
        "id": 1014,
        "name": "noexec option should be set on /dev/shm partition.",
        "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
        "rationale": "Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
        "remediation": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,noexec /dev/shm",
        "test_query": "from mounts where path = '/dev/shm' and flags LIKE '%noexec%';",
        "query_type": "positive_success",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "enabled": false
    },
    {
        "id": 1015,
        "name": "Ensure separate partition exists for /var",
        "description": "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.",
        "rationale": "Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition.",
        "remediation": "For new installations, during installationcreate a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.",
        "test_query": "from mounts where path = '/var';",
        "query_type": "positive_success",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "level": 2,
        "enabled": false
    },
    {
        "id": 1016,
        "name": "Ensure separate partition exists for /var/tmp",
        "description": "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications.",
        "rationale": "Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var/tmp.",
        "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp : # mount -o remount,nodev /var/tmp",
        "test_query": "from mounts where path = '/var/tmp';",
        "query_type": "positive_success",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "level": 2,
        "enabled": false
    },
    {
        "id": 1017,
        "name": "nodev option should be set on /var/tmp partition.",
        "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "rationale": "Since the /var/tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own file system allows an administrator to set the noexec option on the mount, making /var/tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp : # mount -o remount,nodev /var/tmp",
        "test_query": "from mounts where path = '/var/tmp' and flags LIKE '%nodev%';",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1018,
        "name": "Ensure nosuid option set on /var/tmp partition.",
        "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
        "rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp .",
        "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp: mount -o remount,nosuid /var/tmp",
        "test_query": "from mounts where path = '/var/tmp' and flags LIKE '%nosuid%';",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1019,
        "name": "Ensure noexec option set on /var/tmp partition.",
        "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
        "rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp.",
        "remediation": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp: # mount -o remount,noexec /var/tmp",
        "test_query": "from mounts where path = '/var/tmp' and flags LIKE '%noexec%';",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1020,
        "name": "Ensure separate partition exists for /var/log.",
        "description": "The /var/log directory is used by system services to store log data.",
        "rationale": "There are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit data.",
        "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.",
        "test_query": "from mounts where path = '/var/log'",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1021,
        "name": "Ensure separate partition exists for /var/log/audit",
        "description": "The auditing daemon, auditd , stores log data in the /var/log/audit directory.",
        "rationale": "There are two important reasons to ensure that data gathered by auditd is stored on a separate partition: protection against resource exhaustion (since the audit.log file can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions based on the results. If other processes (such as syslog ) consume space in the same partition as auditd , it may not perform as desired.",
        "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.",
        "test_query": "from mounts where path = '/var/log/audit'",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1022,
        "name": "Ensure separate partition exists for /home",
        "description": "The /home directory is used to support disk storage needs of local users.",
        "rationale": "If the system is intended to support local users, create a separate partition for the /home directory to protect against resource exhaustion and restrict the type of files that can be stored under /home .",
        "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /home. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.",
        "test_query": "from mounts where path = '/home'",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.2"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1023,
        "name": "Ensure nodev option set on /home partition",
        "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
        "rationale": "Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices.",
        "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. See the fstab(5) manual page for more information. mount -o remount,nodev /home",
        "test_query": "from mounts where path = '/home' and flags LIKE '%nodev%';",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "level": 2,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1024,
        "name": "Disable Automounting.",
        "description": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.",
        "rationale": "With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "remediation": "Run the following command to disable autofs: systemctl disable autofs",
        "test_query": "from deb_packages where name = 'autofs';",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1026,
        "name": "Ensure sudo is installed.",
        "description": "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.",
        "rationale": "sudo supports a plugin architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plugins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers. The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.",
        "remediation": "Install sudo using the following command. # apt install sudo OR # apt install sudo-ldap",
        "test_query": "from deb_packages where name = 'sudo'",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1027,
        "name": "Ensure sudo commands use pty.",
        "description": "sudo can be configured to run only from a pseudo-pty",
        "rationale": "Attackers can run a malicious program using sudo, which would again fork a background process that remains even when the main program has finished executing.",
        "remediation": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f and add the following line: Defaults use_pty",
        "test_query": "from sudoers where header LIKE '%Defaults%' and rule_details = 'use_pty'",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "cis",
                "version": "5.2.2"
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1028,
        "name": "Ensure sudo log file exists.",
        "description": "sudo can use a custom log file",
        "rationale": "A sudo log file simplifies auditing of sudo commands.",
        "remediation": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f and add the following line:   Defaults logfile=\"<PATH TO CUSTOM LOG FILE>\"   Example    Defaults logfile=\"/var/log/sudo.log\"",
        "test_query": "from sudoers where header LIKE '%Defaults%' and rule_details LIKE '%logfile%'",
        "category": "Filesystem Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1029,
        "name": "Ensure AIDE is installed.",
        "description": "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system",
        "rationale": "By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.",
        "remediation": "Run the following command to install AIDE: apt-get install aide aide-common; Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.",
        "test_query": "from deb_packages where name = 'aide'",
        "category": "Filesystem Integrity Checking",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1030,
        "name": "Ensure filesystem integrity is regularly checked.",
        "description": "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.",
        "rationale": "Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.",
        "remediation": "Run the following command: crontab -u root -e; Add the following line to the crontab: 0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check",
        "test_query": "from crontab where command LIKE '%aide%'",
        "category": "Filesystem Integrity Checking",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1032,
        "name": "Ensure permissions on bootloader config are 0400.",
        "description": "The grub configuration file contains information on boot settings and passwords for unlocking boot options. The grub configuration is usually grub.cfg stored in /boot/grub .",
        "rationale": "Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.",
        "remediation": "Run the following commands to set permissions on your grub configuration: chown root:root /boot/grub/grub.cfg; chmod og-rwx /boot/grub/grub.cfg",
        "test_query": "from file where path = '/boot/grub/grub.cfg' and mode = '0400';",
        "category": "Secure Boot Settings",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1033,
        "name": "Ensure bootloader config is owned by root uid 0.",
        "description": "The grub configuration file contains information on boot settings and passwords for unlocking boot options. The grub configuration is usually grub.cfg stored in /boot/grub .",
        "rationale": "Only root should be able to modify bootloader config.",
        "remediation": "chmod root:root /boot/grub/grub.cfg",
        "test_query": "from file where path = '/boot/grub/grub.cfg' and uid = '0';",
        "category": "Secure Boot Settings",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1034,
        "name": "Ensure authentication required for single user mode.",
        "description": "Single user mode is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.",
        "rationale": "Requiring authentication in single user mode prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.",
        "remediation": "Run the following command and follow the prompts to set a password for the root user: passwd root",
        "test_query": "from shadow where username = 'root' and password_status = 'locked';",
        "category": "Secure Boot Settings",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1036,
        "name": "Ensure address space layout randomization (ASLR) is enabled.",
        "description": "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.",
        "rationale": "Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.",
        "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: kernel.randomize_va_space = 2; Run the following command to set the active kernel parameter: # sysctl -w kernel.randomize_va_space=2",
        "test_query": "from system_controls where name = 'kernel.randomize_va_space' and current_value = '2';",
        "category": "Additional Process Hardening",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1037,
        "name": "Ensure prelink is disabled.",
        "description": "prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.",
        "rationale": "The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.",
        "remediation": "Run the following command to restore binaries to normal: prelink -ua; Run the following command to uninstall prelink: apt-get remove prelink;",
        "test_query": "from deb_packages where name = 'prelink';",
        "category": "Additional Process Hardening",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1037,
        "name": "Ensure core dumps are restricted.",
        "description": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.",
        "rationale": "Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.",
        "remediation": "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file: * hard core 0; Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: fs.suid_dumpable = 0; Run the following command to set the active kernel parameter: # sysctl -w fs.suid_dumpable=0; ",
        "test_query": " from system_controls where name = 'fs.suid_dumpable' and current_value = '0';",
        "category": "Additional Process Hardening",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1038,
        "name": "Ensure AppArmor is installed.",
        "description": "AppArmor provides Mandatory Access Controls",
        "rationale": "Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.",
        "remediation": "Run one of the following commands to install apparmor: dpkg -s apparmor",
        "test_query": " from deb_packages where name = 'apparmor';",
        "category": "Configure AppArmor",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1040,
        "name": "Ensure all AppArmor Profiles are in enforce or complain mode.",
        "description": "AppArmor profiles define what resources applications are able to access.",
        "rationale": "Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.",
        "remediation": "Run the following command to set all profiles to enforce mode: aa-enforce /etc/apparmor.d/*; Any unconfined processes may need to have a profile created or activated for them and then be restarted.",
        "test_query": "from apparmor_profiles where mode != 'enforce' AND mode != 'complain';",
        "category": "Configure AppArmor",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1041,
        "name": "Ensure message of the day /etc/motd is configured properly.",
        "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \r - operating system release \\s - operating system name \u000b - operating system version",
        "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in.",
        "remediation": "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \\m , \r , \\s , or \u000b. , or references to the OS platform",
        "test_query": " from file where path = '/etc/motd' and size > 0;",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1042,
        "name": "Ensure local login warning banner is configured properly.",
        "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \r - operating system release \\s - operating system name \u000b - operating system version",
        "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in.",
        "remediation": "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \\m , \r , \\s , or \u000b , or references to the OS platform. # echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue",
        "test_query": "from file where path = '/etc/issue' and size > 0;",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "scored": true,
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1043,
        "name": "Ensure remote login warning banner is configured properly.",
        "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \r - operating system release \\s - operating system name \u000b - operating system version",
        "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in",
        "remediation": "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \\m , \r , \\s , or \u000b : # echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net",
        "test_query": "from file where path = '/etc/issue.net' and size > 0;",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1044,
        "name": "Ensure permissions on /etc/motd are configured.",
        "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.",
        "rationale": "If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
        "remediation": "chown root:root /etc/motd # chmod u-x,go-wx /etc/motd",
        "test_query": "from file where path = '/etc/motd' and mode = '0644';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1045,
        "name": "Ensure /etc/motd is owned by root uid 0.",
        "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version",
        "rationale": "Only root user should be able to edit /etc/motd.",
        "remediation": "Run the following command chown root:root",
        "test_query": "from file where path = '/etc/motd' and uid = '0';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1046,
        "name": "Ensure permissions on /etc/issue are configured.",
        "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.",
        "rationale": "If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
        "remediation": "Run the following commands to set permissions on /etc/issue: # chown root:root /etc/issue # chmod u-x,go-wx /etc/issue",
        "test_query": "from file where path = '/etc/issue' and mode = '0644';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1047,
        "name": "Ensure /etc/issue is owned by root uid 0.",
        "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.",
        "rationale": "If the /etc/issue file does is not owned by root, it could be modified by unauthorized users.",
        "remediation": "Run the following command chown root:root",
        "test_query": "from file where path = '/etc/issue' and uid = '0';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1048,
        "name": "Ensure permissions on /etc/issue.net are configured.",
        "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.",
        "rationale": "If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
        "remediation": "Run the following commands to set permissions on /etc/issue.net: chown root:root /etc/issue.net; chmod 644 /etc/issue.net",
        "test_query": "from file where path = '/etc/issue.net' and mode <= '644';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1049,
        "name": "Ensure /etc/issue.net is owned by root uid 0.",
        "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.",
        "rationale": "If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
        "remediation": "Run the following commands to set permissions on /etc/issue.net: chown root:root /etc/issue.net; chmod 644 /etc/issue.net",
        "test_query": "from file where path = '/etc/issue.net' and uid = '0';",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1051,
        "name": "Ensure GDM login banner is configured.",
        "description": "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.",
        "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.",
        "remediation": "Edit or create the file /etc/gdm3/greeter.dconf-defaults and add: [org/gnome/login-screen], banner-message-enable=true, banner-message-text='Authorized uses only. All activity may be monitored and reported.'",
        "test_query": "from file where path = '/etc/gdm3/greeter.dconf-defaults' and size > 0;",
        "category": "Command Line Warning Banners",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1052,
        "name": "Ensure chrony is installed.",
        "description": "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.",
        "rationale": "Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.",
        "remediation": "On systems where host based time synchronization is not available, configure systemd-timesyncd. If \"full featured\" and/or encrypted time synchronization is required, install chrony or NTP. To install chrony: # apt install chrony To install ntp: # apt install ntp On virtual systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization.",
        "test_query": "from deb_packages where name = 'chrony';",
        "category": "Time Synchronization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1053,
        "name": "Ensure ntp is installed.",
        "description": "ntp is a daemon which implements the Network Time Protocol (NTP). It is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on NTP can be found at http://www.ntp.org. ntp can be configured to be a client and/or a server. This recommendation only applies if ntp is in use on the system.",
        "rationale": "If ntp is in use on the system proper configuration is vital to ensuring time synchronization is working properly.",
        "remediation": "Add or edit restrict lines in /etc/ntp.conf to match the following: restrict -4 default kod nomodify notrap nopeer noquery restrict -6 default kod nomodify notrap nopeer noquery Add or edit server or pool lines to /etc/ntp.conf as appropriate: server <remote-server> Configure ntp to run as the ntp user by adding or editing the /etc/init.d/ntp file: RUNASUSER=ntp",
        "test_query": "from deb_packages where name = 'ntp';",
        "category": "Time Synchronization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1054,
        "name": "Ensure systemd-timesyncd is configured.",
        "description": "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network. It implements an SNTP client. In contrast to NTP implementations such as chrony or the NTP reference server this only implements a client side, and does not bother with the full NTP complexity, focusing only on querying time from one remote server and synchronizing the local clock to it. The daemon runs with minimal privileges, and has been hooked up with networkd to only operate when network connectivity is available. The daemon saves the current clock to disk every time a new NTP sync has been acquired, and uses this to possibly correct the system clock early at bootup, in order to accommodate for systems that lack an RTC such as the Raspberry Pi and embedded devices, and make sure that time monotonically progresses on these systems, even if it is not always correct. To make use of this daemon a new system user and group \"systemd- timesync\" needs to be created on installation of systemd. Note: The systemd-timesyncd service specifically implements only SNTP. This minimalistic service will set the system clock for large offsets or slowly adjust it for smaller deltas. More complex use cases are not covered by systemd-timesyncd. This recommendation only applies if timesyncd is in use on the system.",
        "rationale": "Proper configuration is vital to ensuring time synchronization is working properly. This recommendation only applies if timesyncd is in use on the system.",
        "remediation": "Run the following command to enable systemd-timesyncd   # systemctl enable systemd-timesyncd.service  ||  Edit the file /etc/systemd/timesyncd.conf and add/modify the following lines:   NTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org   FallbackNTP=2.debian.pool.ntp.org 3.debian.pool.ntp.org    RootDistanceMax=1  || Run the following commands to start systemd-timesyncd.service   # systemctl start systemd-timesyncd.service   # timedatectl set-ntp true  || Notes: Servers listed and RootDistanceMax should be In Accordance With Local Policy some versions of systemd have been compiled without systemd-timesycnd. On these distributions, chrony or NTP should be used instead of systemd-timesycnd. Not all options are available on all versions of systemd-timesyncd",
        "test_query": "from systemd_units where id = 'systemd-timesyncd.service' and active_state = 'active';",
        "category": "Time Synchronization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1057,
        "name": "Ensure the X Window system is not installed.",
        "description": "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.",
        "rationale": "Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.",
        "remediation": "Remove the X Windows System packages: apt purge xserver-xorg*",
        "test_query": "from deb_packages where name = 'xserver-xorg-core'",
        "category": "Ensure the X Window system is not installed",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1058,
        "name": "Ensure Avahi Server is not installed.",
        "description": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.",
        "rationale": "Automatic discovery of network services is not normally required for system functionality. It is recommended to disable the service to reduce the potential attach surface.",
        "remediation": "Run the following command to remove avahi-daemon: # systemctl --now disable avahi-daemon # systemctl stop avahi-daemon.socket  # apt purge avahi-daemon",
        "test_query": "from deb_packages where name = 'avahi-daemon'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1059,
        "name": "Ensure CUPS is not installed.",
        "description": "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.",
        "rationale": "If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be disabled to reduce the potential attack surface.",
        "remediation": "Run the following command to remove cups: # apt purge cups",
        "test_query": "from deb_packages where name = 'cups'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1060,
        "name": "Ensure DHCP Server is not installed.",
        "description": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.",
        "rationale": "Unless a system is specifically set up to act as a DHCP server, it is recommended that this service be disabled to reduce the potential attack surface.",
        "remediation": "Run the following commands to remove dhcpd: # apt purge isc-dhcp-server",
        "test_query": "from deb_packages where name = 'isc-dhcp-server'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1061,
        "name": "Ensure LDAP server is not installed.",
        "description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.",
        "rationale": "If the system will not need to act as an LDAP server, it is recommended that the software be disabled to reduce the potential attack surface.",
        "remediation": "Run the following command to remove slapd: # apt purge slapd",
        "test_query": "from deb_packages where name = 'slapd'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1062,
        "name": "Ensure NFS is not installed.",
        "description": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.",
        "rationale": "If the system does not export NFS shares or act as an NFS client, it is recommended that these services be disabled to reduce remote attack surface.",
        "remediation": "Run the following commands to remove nfs: # apt purge nfs-kernel-server",
        "test_query": "from deb_packages where name = 'nfs-kernel-server'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1063,
        "name": "Ensure DNS Server is not installed.",
        "description": "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.",
        "rationale": "Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.",
        "remediation": "Run the following command to disable dns server: # apt purge bind9 ",
        "test_query": "from deb_packages where name = 'bind9'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1064,
        "name": "Ensure FTP Server is not installed.",
        "description": "The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.",
        "rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is recommended sftp be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.",
        "remediation": "Run the following command to remove vsftpd: # apt purge vsftpd",
        "test_query": "from deb_packages where name = 'vsftpd'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1065,
        "name": "Ensure HTTP Server is not installed.",
        "description": "HTTP or web servers provide the ability to host web site content.",
        "rationale": "Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface.",
        "remediation": "Run the following command to remove apache2: # apt purge apache2",
        "test_query": "from deb_packages where name = 'apache2'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1066,
        "name": "Ensure IMAP server is not installed.",
        "description": "dovecot-imapd is an open source IMAP server for Linux based systems.",
        "rationale": "Unless IMAP servers is to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.",
        "remediation": "apt purge dovecot-imapd",
        "test_query": "from deb_packages where name = 'dovecot-imapd'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1067,
        "name": "Ensure POP3 server is not installed.",
        "description": "dovecot-pop3d is an open source POP3 server for Linux based systems.",
        "rationale": "Unless POP3 servers is to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.",
        "remediation": "apt purge dovecot-pop3d",
        "test_query": "from deb_packages where name = 'dovecot-pop3d'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1068,
        "name": "Ensure Samba is not installed.",
        "description": "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Small Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.",
        "rationale": "If there is no need to mount directories and file systems to Windows systems, then this service can be deleted to reduce the potential attack surface.",
        "remediation": "Run the following command to remove smbd: # apt purge samba",
        "test_query": "from deb_packages where name = 'samba'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1069,
        "name": "Ensure HTTP Proxy Server is not installed.",
        "description": "Squid is a standard proxy server used in many distributions and environments.",
        "rationale": "If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface.",
        "remediation": "Run the following command to remove squid: # apt purge squid",
        "test_query": "from deb_packages where name = 'squid'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1070,
        "name": "Ensure SNMP Server is not installed.",
        "description": "The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.",
        "rationale": "The SNMP server can communicate using SNMP v1, which transmits data in the clear and does not require authentication to execute commands. Unless absolutely necessary, it is recommended that the SNMP service not be used. If SNMP is required the server should be configured to disallow SNMP v1.",
        "remediation": "Run the following command to remove snmpd: # apt purge snmpd",
        "test_query": "from deb_packages where name = 'snmpd';",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1071,
        "name": "Ensure mail transfer agent is configured for local-only mode.",
        "description": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.",
        "rationale": "The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.",
        "remediation": "Stop the mail service or make it bind to localhost only.",
        "test_query": "from listening_ports where port = '25' and address = '0.0.0.0';",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1072,
        "name": "Ensure rsync service is not installed.",
        "description": "The rsyncd service can be used to synchronize files between systems over network links.",
        "rationale": "The rsyncd service presents a security risk as it uses unencrypted protocols for communication.",
        "remediation": "Run the following command to remove rsync: # apt purge rsync",
        "test_query": "from deb_packages where name = 'rsync';",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1073,
        "name": "Ensure NIS Server is not installed.",
        "description": "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.",
        "rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be disabled and other, more secure services be used",
        "remediation": "Run the following command to remove nis: # apt purge nis",
        "test_query": "from deb_packages where name = 'nis'",
        "category": "Remove Special Purpose Services",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1074,
        "name": "Ensure rsh client is not installed.",
        "description": "The rsh-client package contains the client commands for the rsh services.",
        "rationale": "These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh package removes the clients for rsh , rcp and rlogin .",
        "remediation": "Uninstall rsh : apt remove rsh-client",
        "test_query": "from deb_packages where name = 'rsh-client'",
        "category": "Remove Service Clients",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1075,
        "name": "Ensure talk client is not installed.",
        "description": "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talkclient, which allows initialization of talk sessions, is installed by default.",
        "rationale": "The software presents a security risk as it uses unencrypted protocols for communication.",
        "remediation": "Uninstall talk : apt purge talk",
        "test_query": "from deb_packages where name = 'talk'",
        "category": "Remove Service Clients",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1076,
        "name": "Ensure telnet client is not installed.",
        "description": "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.",
        "rationale": "The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.",
        "remediation": "Uninstall telnet : # apt purge telnet",
        "test_query": "from deb_packages where name = 'telnet'",
        "category": "Remove Service Clients",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1077,
        "name": "Ensure LDAP client is not installed.",
        "description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.",
        "rationale": "If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.",
        "remediation": "Uninstall ldap-utils : # apt purge ldap-utils",
        "test_query": "from deb_packages where name = 'ldap-utils'",
        "category": "Remove Service Clients",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1078,
        "name": "Ensure RPC is not installed.",
        "description": "Remote Procedure Call (RPC) is a method for creating low level client server applications across different system architectures. It requires an RPC compliant client listening on a network port. The supporting package is rpcbind.",
        "rationale": "If RPC is not required, it is recommended that this services be removed to reduce the remote attack surface.",
        "remediation": "Run the following command to remove rpcbind: # apt purge rpcbind",
        "test_query": "from deb_packages where name = 'rpcbind'",
        "category": "Remove Service Clients",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1081,
        "name": "Ensure packet redirect sending is disabled.",
        "description": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.",
        "rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.send_redirects = 0 net.ipv4.conf.default.send_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.send_redirects=0 # sysctl -w net.ipv4.conf.default.send_redirects=0 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.send_redirects' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1082,
        "name": "Ensure IP forwarding is disabled.",
        "description": "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.",
        "rationale": "Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.",
        "remediation": "Run the following command to restore the default parameter and set the active kernel parameter: # grep -Els \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.ip_forward\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1 IF IPv6 is enabled: Run the following command to restore the default parameter and set the active kernel parameter: # grep -Els \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv6\\.conf\\.all\\.forwarding\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.ip_forward' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1083,
        "name": "Ensure source routed packets are not accepted. all.accept_source_route",
        "description": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.",
        "rationale": "Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_source_route = 0 net.ipv4.conf.default.accept_source_route = 0     net.ipv6.conf.all.accept_source_route = 0    net.ipv6.conf.default.accept_source_route = 0   || Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_source_route=0 # sysctl -w net.ipv4.conf.default.accept_source_route=0 # sysctl -w net.ipv4.route.flush=1  # sysctl -w net.ipv6.conf.all.accept_source_route=0 # sysctl -w net.ipv6.conf.default.accept_source_route=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.accept_source_route' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1084,
        "name": "Ensure source routed packets are not accepted.",
        "description": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.",
        "rationale": "Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_source_route = 0 net.ipv4.conf.default.accept_source_route = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_source_route=0 # sysctl -w net.ipv4.conf.default.accept_source_route=0 # sysctl -w net.ipv4.route.flush=1 IF IPv6 is enabled: Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_source_route = 0 net.ipv6.conf.default.accept_source_route = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_source_route=0 # sysctl -w net.ipv6.conf.default.accept_source_route=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.default.accept_source_route' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1085,
        "name": "Ensure ICMP redirects are not accepted. net.ipv4.conf.all.accept_redirects",
        "description": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
        "rationale": "Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_redirects = 0 net.ipv4.conf.default.accept_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_redirects=0 # sysctl -w net.ipv4.conf.default.accept_redirects=0 # sysctl -w net.ipv4.route.flush=1  # sysctl -w net.ipv6.conf.all.accept_redirects=0 # sysctl -w net.ipv6.conf.default.accept_redirects=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.accept_redirects' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1086,
        "name": "Ensure ICMP redirects are not accepted. net.ipv4.conf.default.accept_redirects",
        "description": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
        "rationale": "Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_redirects = 0 net.ipv4.conf.default.accept_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_redirects=0 # sysctl -w net.ipv4.conf.default.accept_redirects=0 # sysctl -w net.ipv4.route.flush=1  # sysctl -w net.ipv6.conf.all.accept_redirects=0 # sysctl -w net.ipv6.conf.default.accept_redirects=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.default.accept_redirects' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1087,
        "name": "Ensure secure ICMP redirects are not accepted.",
        "description": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.",
        "rationale": "It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.secure_redirects = 0 net.ipv4.conf.default.secure_redirects = 0. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.secure_redirects=0 # sysctl -w net.ipv4.conf.default.secure_redirects=0 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.secure_redirects' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1088,
        "name": "Ensure secure ICMP redirects are not accepted.",
        "description": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.",
        "rationale": "It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.secure_redirects = 0 net.ipv4.conf.default.secure_redirects = 0. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.secure_redirects=0 # sysctl -w net.ipv4.conf.default.secure_redirects=0 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.default.secure_redirects' and current_value = '0';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1089,
        "name": "Ensure suspicious packets are logged. net.ipv4.conf.all.log_martians",
        "description": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.",
        "rationale": "Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their server.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.log_martians = 1 net.ipv4.conf.default.log_martians = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.log_martians=1 # sysctl -w net.ipv4.conf.default.log_martians=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.log_martians' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1090,
        "name": "Ensure suspicious packets are logged. net.ipv4.conf.default.log_martians",
        "description": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.",
        "rationale": "Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their server.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.log_martians = 1 net.ipv4.conf.default.log_martians = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.log_martians=1 # sysctl -w net.ipv4.conf.default.log_martians=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.default.log_martians' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1091,
        "name": "Ensure broadcast ICMP requests are ignored.",
        "description": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.",
        "rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_echo_ignore_broadcasts = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.icmp_echo_ignore_broadcasts' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1092,
        "name": "Ensure bogus ICMP responses are ignored.",
        "description": "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.",
        "rationale": "Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
        "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_ignore_bogus_error_responses = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.icmp_ignore_bogus_error_responses' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1093,
        "name": "Ensure Reverse Path Filtering is enabled. net.ipv4.conf.all.rp_filter",
        "description": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).",
        "rationale": "Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.rp_filter = 1 net.ipv4.conf.default.rp_filter = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.rp_filter=1 # sysctl -w net.ipv4.conf.default.rp_filter=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.all.rp_filter' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1094,
        "name": "Ensure Reverse Path Filtering is enabled. net.ipv4.conf.default.rp_filter",
        "description": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).",
        "rationale": "Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.rp_filter = 1 net.ipv4.conf.default.rp_filter = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.rp_filter=1 # sysctl -w net.ipv4.conf.default.rp_filter=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.conf.default.rp_filter' and current_value = '1';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1095,
        "name": "Ensure TCP SYN Cookies is enabled. net.ipv4.tcp_syncookies",
        "description": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.",
        "rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.tcp_syncookies = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.tcp_syncookies=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.tcp_syncookies' and current_value = '1'",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1096,
        "name": "Ensure TCP SYN Cookies is enabled. net.ipv4.route.flush",
        "description": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.",
        "rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.tcp_syncookies = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.tcp_syncookies=1 # sysctl -w net.ipv4.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv4.route.flush' and config_value = '1'",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1097,
        "name": "Ensure IPv6 router advertisements are not accepted. net.ipv6.conf.all.accept_ra",
        "description": "This setting disables the systems ability to accept router advertisements",
        "rationale": "It is recommended that systems not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_ra = 0 net.ipv6.conf.default.accept_ra = 0. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_ra=0 # sysctl -w net.ipv6.conf.default.accept_ra=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv6.conf.all.accept_ra' and current_value = '0'",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1098,
        "name": "Ensure IPv6 router advertisements are not accepted. net.ipv6.conf.all.accept_ra",
        "description": "This setting disables the systems ability to accept router advertisements",
        "rationale": "It is recommended that systems not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
        "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_ra = 0 net.ipv6.conf.default.accept_ra = 0. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_ra=0 # sysctl -w net.ipv6.conf.default.accept_ra=0 # sysctl -w net.ipv6.route.flush=1",
        "test_query": "from system_controls where name = 'net.ipv6.conf.all.accept_ra' and current_value = '0'",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1099,
        "name": "Ensure IPv6 router advertisements are not accepted. net.ipv6.conf.default.accept_ra",
        "description": "This setting disables the systems ability to accept router advertisements",
        "rationale": "",
        "remediation": "Set #sysctl -w net.ipv6.conf.default.accept_ra=0",
        "test_query": "from system_controls where name = 'net.ipv6.conf.default.accept_ra' and current_value = '0'",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1100,
        "name": "Ensure DCCP is disabled.",
        "description": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in- sequence delivery.",
        "rationale": "If the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/dccp.conf and add the following line: install dccp /bin/true",
        "test_query": "from kernel_modules where name = 'dccp';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1101,
        "name": "Ensure SCTP is disabled.",
        "description": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.",
        "rationale": "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/sctp.conf and add the following line: install sctp /bin/true",
        "test_query": "from kernel_modules where name = 'sctp';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1102,
        "name": "Ensure RDS is disabled.",
        "description": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation.",
        "rationale": "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/rds.conf and add the following line: install rds /bin/true",
        "test_query": "from kernel_modules where name = 'rds';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1103,
        "name": "Ensure TIPC is disabled.",
        "description": "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.",
        "rationale": "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
        "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/tipc.conf and add the following line: install tipc /bin/true",
        "test_query": "from kernel_modules where name = 'tipc';",
        "category": "Network Configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1104,
        "name": "Ensure ufw service is installed.",
        "description": "Uncomplicated Firewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall. Ensure that the ufw service is enabled to protect your system.",
        "rationale": "A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.",
        "remediation": "Run the following command to install Uncomplicated Firewall (UFW): # apt install ufw OR #  apt install nftables OR # apt install iptables",
        "test_query": "from deb_packages where name = 'ufw'",
        "category": "Firewall configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1105,
        "name": "Ensure iptables-persistent is not installed.",
        "description": "The iptables-persistentis a boot-time loader for netfilter rules, iptables plugin",
        "rationale": "Running both ufwand the services included in theiptables-persistent package may lead to conflict",
        "remediation": "Run the following command to install Uncomplicated Firewall (UFW): # apt install ufw OR #  apt install nftables OR # apt install iptables",
        "test_query": "from deb_packages where name = 'iptables-persistent'",
        "category": "Firewall configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1106,
        "name": "Ensure ufw service is enabled.",
        "description": "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall. Ensure that the ufw service is enabled to protect your system.",
        "rationale": "The ufw service must be enabled and running in order for ufw to protect the system",
        "remediation": "Run the following command to enable ufw: # ufw enable",
        "test_query": "from systemd_units where id = 'ufw.service' and active_state='active';",
        "category": "Firewall configuration",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1109,
        "name": "Ensure nftables is not installed if iptables is installed.",
        "description": "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.",
        "rationale": "Running both iptablesand nftablesmay lead to conflict",
        "remediation": "RRun the following command to remove nftables:: # apt purge nftables",
        "test_query": "from deb_packages where name = 'nftables'",
        "category": "Firewall configuration",
        "compliance": [],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1111,
        "name": "Ensure default INPUT deny firewall policy.",
        "description": "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.",
        "rationale": "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.",
        "remediation": "Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # Notes: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
        "test_query": "SELECT CASE WHEN COUNT(*) >= 1 THEN 'Passing' ELSE 'Failing' END AS state from iptables where chain like '%INPUT%' and policy like '%DROP%';",
        "category": "Firewall configuration",
        "compliance": [],
        "enabled": true
    },
    {
        "id": 1115,
        "name": "Ensure auditd is installed.",
        "description": "auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk",
        "rationale": "The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "remediation": "Run the following command to enable auditd: # apt install auditd audispd-plugins",
        "test_query": "from deb_packages where name = 'auditd'",
        "category": "Logging and Auditing",
        "compliance": [],
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1117,
        "name": "Ensure auditd is enabled.",
        "description": "Enable and start the auditd daemon to record system events.",
        "rationale": "The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "remediation": "Run the following command to enable auditd: # systemctl --now enable auditd",
        "test_query": "from systemd_units where id = 'auditd.service' and active_state = 'active';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1123,
        "name": "Ensure rsyslog is installed.",
        "description": "The rsyslog software are recommended replacements to the original syslogd daemon which provide improvements over syslogd , such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server.",
        "rationale": "The security enhancements of rsyslogsuch as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.",
        "remediation": "Install rsyslog: # apt install rsyslog",
        "test_query": "from deb_packages where name = 'rsyslog'",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "cis",
                "version": "1.1.3"
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1124,
        "name": "Ensure rsyslog Service is enabled.",
        "description": "Once the rsyslog package is installed it needs to be activated.",
        "rationale": "If the rsyslog service is not activated the system will not have a syslog service running.",
        "remediation": "Run the following command to enable rsyslog: # systemctl --now enable rsyslog",
        "test_query": "from systemd_units where id = 'rsyslog.service' and active_state = 'active';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1125,
        "name": "Ensure rsyslog default file permissions configured to resrictive mode.",
        "description": "rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to 0640 or more restrictive:   $FileCreateMode 0640",
        "test_query": "from file where path = '/etc/rsyslog.conf' and mode <= '0644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1126,
        "name": "Ensure restrictive permissions for /var/log/syslog.",
        "description": "Log files can contain valuable information regarding system configuration. If the system log files are not protected, unauthorized users could change the logged data, eliminating their forensic value. ",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/syslog",
        "test_query": "from file where path = '/var/log/syslog' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1127,
        "name": "Ensure restrictive permissions for /var/log/auth.log.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/auth.log",
        "test_query": "from file where path = '/var/log/auth.log' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1128,
        "name": "Ensure restrictive permissions for /var/log/lastlog.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/lastlog",
        "test_query": "from file where path = '/var/log/lastlog' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1129,
        "name": "Ensure restrictive permissions for /var/log/kern.log.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/kern.log",
        "test_query": "from file where path = '/var/log/kern.log' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1130,
        "name": "Ensure restrictive permissions for /var/log/faillog.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/faillog",
        "test_query": "from file where path = '/var/log/faillog' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1131,
        "name": "Ensure restrictive permissions for /var/log/dpkg.log.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/dpkg.log",
        "test_query": "from file where path = '/var/log/dpkg.log' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1132,
        "name": "Ensure restrictive permissions for /var/log/mail.log.",
        "description": "Log file contains sensitive information.",
        "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "remediation": "chmod 644 /var/log/mail.log",
        "test_query": "from file where path = '/var/log/mail.log' and mode <= '644';",
        "category": "Logging and Auditing",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": false
    },
    {
        "id": 1133,
        "name": "Ensure cron daemon is enabled and running.",
        "description": "The cron daemon is used to execute batch jobs on the system.",
        "rationale": "While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them.",
        "remediation": "Run the following command to enable cron: systemctl --now enable cron",
        "test_query": "from systemd_units where id = 'cron.service' and active_state = 'active';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1135,
        "name": "Permissions on /etc/crontab should be 644",
        "description": "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.",
        "rationale": "This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/crontab : chown root:root /etc/crontab and chmod og-rwx /etc/crontab",
        "test_query": "from file where path = '/etc/crontab' and mode <= '644';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1136,
        "name": "Permissions on /etc/cron.hourly should be 644",
        "description": "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
        "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/cron.hourly : chown root:root /etc/cron.hourly and chmod og-rwx /etc/cron.hourly",
        "test_query": "from file where path = '/etc/cron.hourly' and mode <= '644';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1137,
        "name": "Permissions on /etc/cron.daily should be 644.",
        "description": "This directory contains system cron jobs that need to run on an daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
        "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/cron.daily : chown root:root /etc/cron.hourly and chmod og-rwx /etc/cron.daily",
        "test_query": "from file where path = '/etc/cron.daily' and mode <= '644';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1138,
        "name": "Permissions on /etc/cron.weekly should be 644.",
        "description": "This directory contains system cron jobs that need to run on an weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
        "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/cron.weekly : chown root:root /etc/cron.hourly and chmod og-rwx /etc/cron.weekly",
        "test_query": "from file where path = '/etc/cron.weekly' and mode <= '644';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1139,
        "name": "Permissions on /etc/cron.monthly should be 644.",
        "description": "This directory contains system cron jobs that need to run on an monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
        "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/cron.monthly : chown root:root /etc/cron.monthly and chmod og-rwx /etc/cron.monthly",
        "test_query": "from file where path = '/etc/cron.monthly' and mode <= '644';",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1140,
        "name": "Create and configure /etc/cron.allow",
        "description": "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.",
        "rationale": "On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.",
        "remediation": "Run the following commands to remove /etc/cron.deny and /etc/at.deny and create and set permissions and ownership for /etc/cron.allow and /etc/at.allow: rm /etc/cron.deny;rm /etc/at.deny;touch /etc/cron.allow; touch /etc/at.allow; chmod og-rwx /etc/cron.allow; chmod og-rwx /etc/at.allow; chown root:root /etc/cron.allow and chown root:root /etc/at.allow",
        "test_query": "from file where path = '/etc/cron.allow'",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1141,
        "name": "Create and configure /etc/at.allow",
        "description": "Configure /etc/at.allow to allow specific users to use this service. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in this file is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.",
        "rationale": "On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.",
        "remediation": "Run the following commands to remove /etc/at.deny and create and set permissions and ownership for/etc/at.allow: # rm /etc/at.deny # touch /etc/at.allow # chmod og-rwx /etc/at.allow # chown root:root /etc/at.allow",
        "test_query": "from file where path = '/etc/at.allow'",
        "category": "Access, Authentication and Authorization",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1142,
        "name": "Ensure permissions on /etc/ssh/sshd_config are configured.",
        "description": "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.",
        "rationale": "The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non- privileged users.",
        "remediation": "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config: # chown root:root /etc/ssh/sshd_config # chmod og-rwx /etc/ssh/sshd_config",
        "test_query": "from file where path = '/etc/ssh/sshd_config' and mode <= '644';",
        "category": "SSH Server Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1143,
        "name": "Ensure that all files in /etc/ssh have restricted root-only permissions.",
        "description": "Files in /etc/ssh contain configuration specifications for sshd. The owner and group of the files should be set to root.",
        "rationale": "Files in /etc/ssh need to be protected from unauthorized changes by non-privileged users",
        "remediation": "# chown root:root /etc/ssh/* # chmod og-rwx /etc/ssh/*",
        "test_query": "from file WHERE path LIKE '/etc/ssh/%%' and mode > '644';",
        "category": "SSH Server Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1144,
        "name": "Ensure SSH LogLevel is appropriate.",
        "description": "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.",
        "rationale": "SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LogLevel VERBOSE or LogLevel INFO",
        "test_query": "from augeas WHERE path = '/etc/ssh/sshd_config' and label like '%LogLevel%' and value LIKE '%VERBOSE%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1145,
        "name": "Ensure SSH X11 forwarding is disabled.",
        "description": "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.",
        "rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.",
        "remediation": "Edit the /etc/ssh/sshd_configfile to set the parameter as follows: X11Forwarding no",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%X11Forwarding no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1146,
        "name": "Ensure MaxAuthTries in /etc/ssh/sshd_config is set to = 3.",
        "description": "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.",
        "rationale": "Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxAuthTries 3",
        "test_query": "from augeas WHERE path = '/etc/ssh/sshd_config' and label like '%MaxAuthTries%' and value < 4 ;",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1147,
        "name": "Ensure SSH IgnoreRhosts is enabled.",
        "description": "The IgnoreRhosts parameter specifies that .rhostsand .shostsfiles will not be used in RhostsRSAAuthenticationor HostbasedAuthentication.",
        "rationale": "Setting this parameter forces users to enter a password when authenticating with ssh.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: IgnoreRhosts yes",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%IgnoreRhosts yes%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1148,
        "name": "Ensure SSH HostbasedAuthentication is disabled.",
        "description": "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.",
        "rationale": "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: HostbasedAuthentication no.",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%HostbasedAuthentication no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1149,
        "name": "Ensure SSH HostbasedAuthentication is disabled.",
        "description": "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.",
        "rationale": "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: HostbasedAuthentication no",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label LIKE '%PermitRootLogin%' and value LIKE '%no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1150,
        "name": "Ensure PermitEmptyPasswords in /etc/ssh/sshd_config is set to no.",
        "description": "The PermitEmptyPasswords parameter specifies if the server allows login to accounts with empty password strings.",
        "rationale": "Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitEmptyPasswords no",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%PermitEmptyPasswords no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1151,
        "name": "Ensure PermitUserEnvironment in /etc/ssh/sshd_config is set to no.",
        "description": "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.",
        "rationale": "Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitUserEnvironment no",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%PermitUserEnvironment no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1152,
        "name": "Ensure SSH Idle Timeout Interval is configured - ClientAliveInterval",
        "description": "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. When the ClientAliveInterval variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the ClientAliveCountMax variable is set, sshd will send client alive messages at every ClientAliveInterval interval. When the number of consecutive client alive messages are sent with no response from the client, the ssh session is terminated. For example, if the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.",
        "rationale": "Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening. While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for ClientAliveCountMax is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy: ClientAliveInterval 300",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label='ClientAliveInterval' and value='300';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1153,
        "name": "Ensure SSH Idle Timeout Interval is configured - ClientAliveCountMax",
        "description": "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. When the ClientAliveInterval variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the ClientAliveCountMax variable is set, sshd will send client alive messages at every ClientAliveInterval interval. When the number of consecutive client alive messages are sent with no response from the client, the ssh session is terminated. For example, if the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.",
        "rationale": "Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening. While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for ClientAliveCountMax is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy: ClientAliveInterval 300",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label='ClientAliveCountMax' and value='300';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1154,
        "name": "Ensure SSH LoginGraceTime is set to one minute or less.",
        "description": "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.",
        "rationale": "Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LoginGraceTime 60",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label like '%LoginGraceTime%' and value LIKE '%60%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1155,
        "name": "Ensure SSH access is limited.",
        "description": "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged: AllowUsers, AllowGroups, DenyUsers, DenyGroups.",
        "rationale": "Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows: AllowUsers <userlist>    AllowGroups <grouplist>    DenyUsers <userlist>    DenyGroups <grouplist>",
        "test_query": "SELECT CASE WHEN COUNT(*) > 1 THEN 'Passing' ELSE 'Failing' END AS state from augeas WHERE path = '/etc/ssh/sshd_config' and node like '%/AllowUsers%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "enabled": true
    },
    {
        "id": 1156,
        "name": "Ensure SSH warning banner is configured.",
        "description": "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.",
        "rationale": "Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Banner /etc/issue.net",
        "test_query": "from augeas WHERE path = '/etc/ssh/sshd_config' and label like '%Banner%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1157,
        "name": "Ensure SSH PAM is enabled.",
        "description": "UsePAM Enables the Pluggable Authentication Module interface. If set to \u201cyes\u201d this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types.",
        "rationale": "When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: UsePAM yes",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label LIKE '%UsePAM%' and value LIKE '%yes%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1158,
        "name": "Ensure SSH AllowTcpForwarding is disabled.",
        "description": "SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.",
        "rationale": "Leaving port forwarding enabled can expose the organization to security risks and back-doors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: AllowTcpForwarding no",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%AllowTcpForwarding no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1159,
        "name": "Ensure SSH MaxStartups is configured.",
        "description": "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.",
        "rationale": "To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: maxstartups 10:30:60",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label LIKE '%MaxStartups%' and value LIKE '%10:30:60%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1160,
        "name": "Ensure SSH MaxSessions is limited.",
        "description": "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.",
        "rationale": "To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.",
        "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxSessions 10",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%MaxSessions 10%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1161,
        "name": "Ensure password creation requirements are configured.",
        "description": "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options: - retry=3 (Allow 3 tries before sending back a failure). The following options are set in the /etc/security/pwquality.conf file: - minlen = 14 dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1 (The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies.)",
        "rationale": "Strong passwords protect systems from being hacked through brute force methods.",
        "remediation": "1) Run the following command to install the pam_pwquality module: apt install libpam-pwquality 2) Edit the /etc/pam.d/common-password file to include the appropriate options for pam_pwquality.so and to conform to site policy: password requisite pam_pwquality.so retry=3 3) Edit /etc/security/pwquality.conf to add or update the following settings to conform to site policy: minlen = 14 dcredit = -1 ucredit = -1 ocredit = -1 lcredit = -1. Notes: Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more. Settings in /etc/security/pwquality.conf must use spaces around the = symbol.",
        "test_query": "from deb_packages where name LIKE '%libpam-pwquality%' and status LIKE '%installed%';",
        "category": "Configure PAM",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1165,
        "name": "Ensure default group for the root account is GID 0.",
        "description": "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.",
        "rationale": "Using GID 0 for the root account helps prevent root-owned files from accidentally becoming accessible to non-privileged users.",
        "remediation": "Run the following command to set the root user default group to GID 0: # usermod -g 0 root",
        "test_query": "FROM users where username = 'root' and gid = '0';",
        "category": "User Accounts and Environment",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1167,
        "name": "Ensure permissions on /etc/passwd are configured.",
        "description": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.",
        "rationale": "It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "remediation": "Run the following command to set permissions on /etc/passwd: # chown root:root /etc/passwd # chmod 600 /etc/passwd",
        "test_query": "from file where path = '/etc/passwd' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1168,
        "name": "Ensure permissions on /etc/gshadow- are configured.",
        "description": "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.",
        "rationale": "It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "remediation": "Run the one of the following chown commands as appropriate and the chmod to set permissions on /etc/gshadow- : # chown root:root /etc/gshadow- # chown root:shadow /etc/gshadow- # chmod o-rwx,g-wx /etc/gshadow-",
        "test_query": "from file where path = '/etc/gshadow-' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1169,
        "name": "Ensure permissions on /etc/shadow are configured.",
        "description": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
        "rationale": "If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
        "remediation": "Run the one following commands to set permissions on /etc/shadow : # chown root:shadow /etc/shadow # chmod o-rwx,g-wx /etc/shadow",
        "test_query": "from file where path = '/etc/shadow' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1170,
        "name": "Ensure permissions on /etc/group are configured.",
        "description": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.",
        "rationale": "The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "remediation": "Run the following command to set permissions on /etc/group: # chown root:root /etc/group # chmod 644 /etc/group",
        "test_query": "from file where path = '/etc/group' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1171,
        "name": "Ensure permissions on /etc/passwd- are configured.",
        "description": "The /etc/passwd- file contains backup user account information.",
        "rationale": "It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "remediation": "Run the following command to set permissions on /etc/passwd-: # chown root:root /etc/passwd- # chmod u-x,go-rwx /etc/passwd-",
        "test_query": "from file where path = '/etc/passwd-' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1172,
        "name": "Ensure permissions on /etc/shadow- are configured.",
        "description": "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
        "rationale": "It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "remediation": "Run the following commands to set permissions on /etc/shadow- : # chown root:shadow /etc/shadow- # chmod u-x,go-rwx /etc/shadow-",
        "test_query": "from file where path = '/etc/shadow-' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1173,
        "name": "Ensure permissions on /etc/group- are configured.",
        "description": "The /etc/group- file contains a backup list of all the valid groups defined in the system.",
        "rationale": "It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "remediation": "Run the following command to set permissions on /etc/group-: # chown root:root /etc/group- # chmod u-x,go-rwx /etc/group-",
        "test_query": "from file where path = '/etc/group-' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1174,
        "name": "Ensure permissions on /etc/gshadow are configured.",
        "description": "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.",
        "rationale": "If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group",
        "remediation": "Run the following commands to set permissions on /etc/gshadow : # chown root:shadow /etc/gshadow # chmod o-rwx,g-rw /etc/gshadow",
        "test_query": "from file where path = '/etc/gshadow' and mode <= '644';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1175,
        "name": "Ensure root is the only UID 0 account.",
        "description": "Any account with UID 0 has superuser privileges on the system.",
        "rationale": "This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.",
        "remediation": "Remove any users other than root with UID 0 or assign them a new UID if appropriate.",
        "test_query": "from users where uid = 0 and username != 'root';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1176,
        "name": "Ensure shadow group is empty.",
        "description": "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.",
        "rationale": "Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.",
        "remediation": "Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group.",
        "test_query": "FROM groups CROSS JOIN users USING (gid) where groupname = 'shadow';",
        "category": "System File Permissions",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "negative_success",
        "enabled": true
    },
    {
        "id": 1177,
        "name": "SSH Hardening: Port should not be 22",
        "description": "The ssh daemon should not be listening on port 22 (the default value) for incoming connections.",
        "rationale": "Changing the default port you may reduce the number of successful attacks from zombie bots, an attacker or bot doing port-scanning can quickly identify your SSH port.",
        "remediation": "Change the Port option value in the sshd_config file.",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and value LIKE '%Port 22%';",
        "category": "SSH Server Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "negative_success",
        "enabled": false
    },
    {
        "id": 1178,
        "name": "SSH Hardening: Protocol should be set to 2",
        "description": "The SSH protocol should not be 1.",
        "rationale": "The Protocol parameter dictates which version of the SSH communication and encryption protocols are in use. Version 1 of the SSH protocol has weaknesses.",
        "remediation": "Change the Protocol option value in the sshd_config file. If this line does not exist add it to the bottom of the file: 'Protocol 2'",
        "test_query": "from augeas WHERE path = '/etc/ssh/sshd_config' and label LIKE '%Protocol%' and value LIKE '%2%';",
        "category": "SSH Server Configuration",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1179,
        "name": "SSH Hardening: Public Key authentication",
        "description": "The option PubkeyAuthentication should be set yes.",
        "rationale": "Access only by public key. Generally people will use weak passwords and have poor password practices. Keys are considered stronger than password.",
        "remediation": "Change the PubkeyAuthentication option value in the sshd_config file.",
        "test_query": ", value from augeas WHERE path = '/etc/ssh/sshd_config' and label LIKE '%PubkeyAuthentication%' and value LIKE '%yes%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1180,
        "name": "SSH Hardening: Password Authentication should be disabled",
        "description": "The option PasswordAuthentication should be set to no.",
        "rationale": "The option PasswordAuthentication specifies whether we should use password-based authentication. Use public key authentication instead of passwords.",
        "remediation": "Change the PasswordAuthentication option value in the sshd_config file.",
        "test_query": "from augeas WHERE path = '/etc/ssh/sshd_config' and label like '%PasswordAuthentication%' and value like '%no%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    },
    {
        "id": 1181,
        "name": "Ensure retry option for passwords is set to 2",
        "description": "The pam_pwquality.so module and pam_cracklib.so module (depending on the Linux distribution used) checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.",
        "rationale": "Strong passwords protect systems from being hacked through brute force methods.",
        "remediation": "Edit the /etc/pam.d/common-password and set retry=2.",
        "test_query": ", value from augeas WHERE path = '/etc/pam.d/common-password' and value LIKE '%retry=2%';",
        "compliance": [
            {
                "name": "",
                "version": ""
            }
        ],
        "query_type": "positive_success",
        "enabled": true
    }
]