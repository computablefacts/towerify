'use strict'

export class InventoryVulnerability {

    constructor(obj) {

        const asset = obj.asset;
        const port = obj.port;
        const alert = obj.alert;
        const events = obj.events;
        const cveRegex = /CVE-\d{4}-\d+/;
        const cveMatch = alert.cve_id && alert.cve_id.match(cveRegex);
        const cveId = cveMatch ? cveMatch[0] : null;

        this.id = alert.id;
        this.asset = asset.asset;
        this.ip = port.ip;
        this.port = port.port;
        this.protocol = port.protocol;
        this.service = port.service;
        this.product = port.product;
        this.host = port.hosting_service_description;
        this.country_code = port.country_code;
        this.level = adjustSeverityLevel(alert.level);
        this.type = alert.type ? alert.type.replace(/(_alert|_v3_alert)$/, '') : null;
        this.fullType = alert.type;
        this.remediation = alert.remediation;
        this.vulnerability = alert.vulnerability;
        this.cve_id = alert.cve_id && alert.cve_id !== "" ? alert.cve_id : cveId;
        this.title = cveId ? 'CVE' : alert.type;
        this.title2 = alert.title && alert.title !== "" ? alert.title : '';
        this.tags = alert.tags ? Object.values(alert.tags) : [];
        this.tested = events.length > 0;
        this.is_valid = true;
        this.start_date = alert.updated_at;
        this.flarum_url = null;
        this.uid = alert.uid
    }
}

function adjustSeverityLevel(level) {
    if (level === "High") {
        return "high";
    } else if (level === 'High (unverified)') {
        return "high (unverified)"
    } else if (level.includes("Medium")) {
        return "medium";
    } else if (level.includes("Low")) {
        return "low";
    } else {
        return level;
    }
}
