'use strict'

export class InventoryVulnerability {

    constructor(alert) {

        const cveRegex = /CVE-\d{4}-\d+/;
        const cveMatch = alert.value_4.match(cveRegex);
        const cveId = cveMatch ? cveMatch[0] : null;

        this.id = alert.id;
        this.asset = alert.value_0;
        this.ip = alert.value_1;
        this.port = alert.value_2;
        this.protocol = alert.value_3;
        this.service = alert.service;
        this.product = alert.product;
        this.host = alert.hosting_provider;
        this.country_code = alert.country_code;
        this.level = adjustSeverityLevel(alert.value_6);
        this.type = alert.type ? alert.type.replace(/(_alert|_v3_alert)$/, '') : null;
        this.fullType = alert.type;
        this.remediation = alert.value_5;
        this.vulnerability = alert.value_4;
        this.cve_id = alert.value_8 && alert.value_8 !== "" ? alert.value_8 : cveId;
        this.title = cveId ? 'CVE' : alert.type;
        this.title2 = alert.value_12 && alert.value_12 !== "" ? alert.value_12 : '';
        this.tags = alert.tags ? Object.values(alert.tags) : [];
        this.tested = alert.tested;
        this.is_valid = alert.is_valid;
        this.start_date = alert.start_date;
        this.flarum_url = alert.flarum_url;
        this.uid = alert.value_7
    }
}

function adjustSeverityLevel(level) {
    if (level === "High") {
        return "high";
    } else if (level === 'High (unverified)') {
        return "high (unverified)"
    } else if (level.includes("Medium")) {
        return "medium";
    } else if (level.includes("Low")) {
        return "low";
    } else {
        return level;
    }
}
